// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Edit me if you're not using Postgres
  url      = env("DATABASE_URL")
}

// 玩家資料
model Player {
  player_id    String // kktix_token
  name         String // opass user_id
  avatar       String? // jpg, png with player_id
  linktree     String? // linktree url
  stage        Int     @default(0) // completed stage
  currentStage String? // stage_id
  team_id      String? @db.Uuid // team_id
  compass      Boolean @default(false) // compass status

  team         Team?               @relation(fields: [team_id], references: [team_id])
  fragments    Fragment[]
  achievements AchievementStatus[]
  scores       PlayerScoreboard?
  boothStatus  BoothStatus[]

  @@id([player_id])
}

// 隊伍資料
model Team {
  team_id    String          @default(uuid()) @db.Uuid // team_id
  name       String // team name
  player1_id String          @unique // player_id
  player2_id String          @unique // player_id
  player3_id String          @unique // player_id
  player4_id String          @unique // player_id
  players    Player[]
  scores     TeamScoreboard?

  @@id([team_id])
}

// 碎片資料
model Fragment {
  fragment_id Int    @default(autoincrement()) // fragment_id
  player_id   String
  type        String // share, compass, self
  amount      Int // count
  player      Player @relation(fields: [player_id], references: [player_id])

  @@id([fragment_id, player_id])
}

// 排行榜
model PlayerScoreboard {
  player_id String // player_id
  score     Int // score
  player    Player @relation(fields: [player_id], references: [player_id])

  @@id([player_id])
}

model TeamScoreboard {
  team_id String @db.Uuid // team_id
  score   Int // score
  team    Team   @relation(fields: [team_id], references: [team_id])

  @@id([team_id])
}

// 成就
model Achievement {
  achievement_id String              @default(uuid()) @db.Uuid // achievement_id
  name           String // achievement name
  description    String // achievement description
  prize          Int                 @default(0) // count?
  statuses       AchievementStatus[]

  @@id([achievement_id])
}

// 成就狀態
// use object
model AchievementStatus {
  achievement_id String      @db.Uuid // achievement_id
  player_id      String      @db.Text // player_id
  achievement    Achievement @relation(fields: [achievement_id], references: [achievement_id])
  player         Player      @relation(fields: [player_id], references: [player_id])

  @@id([achievement_id, player_id])
}

// 攤位(Complete)
model Booth {
  booth_id String        @default(uuid()) @db.Uuid
  name     String
  statuses BoothStatus[]

  @@id([booth_id])
}

model BoothStatus {
  booth_id  String @db.Uuid
  player_id String @db.Text
  booth     Booth  @relation(fields: [booth_id], references: [booth_id])
  player    Player @relation(fields: [player_id], references: [player_id])

  @@id([booth_id, player_id])
}

// 關卡ID
model Stage {
  stage_id      String    @default(uuid()) @db.Uuid // stage_id
  floor         Int // floor
  size          Int       @default(0) // size
  blocker_count Int       @default(0) // blocker count
  blockers      Blocker[]

  @@id([stage_id])
}

// 障礙物
model Blocker {
  blocker_id String @default(uuid()) @db.Uuid // blocker_id
  stage_id   String @db.Uuid // stage_id
  col        Int    @default(0) // col
  layer      Int    @default(0) // layer
  row        Int    @default(0) // row
  stage      Stage  @relation(fields: [stage_id], references: [stage_id])

  @@id([blocker_id])
}

// 折價券
model Coupon {
  coupon_id String  @default(uuid()) @db.Uuid // coupon_id
  type      Int     @default(0) // type
  used      Boolean @default(false) // used

  @@id(coupon_id)
}

// 抽獎券
model Lottery {
  player_id  String @db.Text // player_id
  lottery_id String @db.Text // lottery_id
  type       String // type

  @@id([player_id, lottery_id])
}
